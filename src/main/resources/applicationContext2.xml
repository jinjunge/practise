<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

  <!--  <context:component-scan base-package="com.sand"></context:component-scan>-->
    <!--引入属性文件 通过context标签-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="maxPoolSize" value="10"></property>
        <property name="minPoolSize" value="5"></property>
    </bean>
    <!--配置SqlSessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:sqlmapConfig.xml"></property>
        <property name="dataSource" ref="dataSource"/>
        <!--别名包扫描-->
        <property name="typeAliasesPackage" value="com.sand.mybatis.pojo"/>
    </bean>
    <!--配置dao-->
<!--    <bean id="userDao" class="com.sand.mybatis.dao.impl.UserDaoImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->


    <!--配置service-->
<!--   <bean id="accountService" class="com.sand.tx.service.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>-->
    <!--配置dao-->
 <!--   <bean id="accountDao" class="com.sand.tx.dao.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>-->
    <!--动态代理dao配置：第一种：-->
  <!--  <bean id="baseMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" abstract="true">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <bean parent="baseMapper">
        <property name="mapperInterface" value="com.sand.mybatis.mapper.UserMapper"/>
    </bean>-->

    <!--动态代理dao配置：第二种：包扫描-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sand.springmvc.mapper"/>
    </bean>


    <!--配置平台事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启注解事务-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <!-- @Service包扫描器 -->
    <context:component-scan base-package="com.sand.springmvc.service"/>

</beans>